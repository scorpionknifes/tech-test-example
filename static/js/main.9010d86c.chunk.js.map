{"version":3,"sources":["Context.tsx","Navbar.tsx","Module.ts","Generate.tsx","Saved.tsx","App.tsx","index.tsx"],"names":["Context","createContext","Navbar","setPage","useContext","Nav","variant","defaultActiveKey","Item","Link","eventKey","onClick","generated4pin","pin","consecutive","positive","lastvalue","length","value","Math","floor","random","abs","push","toString","Generate","useState","Array","pins","setPins","data","setData","Container","Row","fields","i","Col","key","Form","Control","drawField","style","paddingTop","Button","Pin","Map","size","has","set","from","keys","generate5unique","width","type","alert","includes","className","Field","Props","Pins","name","setName","useEffect","Key","paddingBottom","placeholder","onChange","e","Object","assign","onChangeNameHandler","target","dataclone","splice","Saved","map","App","page","ReactDOM","render","props","setLocalData","JSON","parse","localStorage","getItem","Provider","setItem","stringify","children","document","getElementById"],"mappings":"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","file":"static/js/main.9010d86c.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Interface for Context\r\ninterface IContext {\r\n    page: string,\r\n    setPage: React.Dispatch<React.SetStateAction<string>>,\r\n    data: string[][],\r\n    setData(data: string[][]): any,\r\n}\r\n\r\n// Export Provider and Context\r\nexport const Context = createContext({} as IContext);\r\n\r\nexport function Provider(props: any) {\r\n    const [page, setPage] = useState<string>(\"generate\")\r\n    const [data, setLocalData] = useState<string[][]>([])\r\n\r\n    // On Load React will get data from localstorage\r\n    useEffect(()=>{\r\n        setLocalData(JSON.parse(localStorage.getItem(\"data\")|| '[]'))\r\n    }, [])\r\n\r\n    const setData = (data: string[][]) => {\r\n        localStorage.setItem(\"data\", JSON.stringify(data))\r\n        setLocalData(data)\r\n    }\r\n  return (\r\n    <Context.Provider value={{\r\n        page, setPage,\r\n        data, setData,\r\n    }}>{props.children}</Context.Provider>\r\n  );\r\n}","import React, { useContext } from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Context } from './Context'\r\n\r\n\r\n//Navigation Bar on the top\r\nconst Navbar = () => {\r\n    const {setPage} = useContext(Context)\r\n    return (\r\n        <Nav variant=\"tabs\" defaultActiveKey=\"generate\">\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"generate\" onClick={()=>setPage(\"generate\")}>Generate</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"saved\" onClick={()=>setPage(\"saved\")}>Saved</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","// TypeScript Module for generating unique code in the format of\r\n//    [XXXX XXXX XXXX XXXX XXXX]\r\n\r\nexport default function generate5unique(): string[]  {\r\n    let pins = new Map()\r\n    while (pins.size < 5){\r\n        let pin = generated4pin()\r\n        if (!pins.has(pin)){\r\n            pins.set(pin, null)\r\n        }\r\n    }\r\n    return Array.from( pins.keys() );\r\n}\r\n\r\n// Function to check each XXXX for consecutive repeats and consecutive ascending and descending\r\nfunction generated4pin(): string {\r\n    let pin: number[] = [];\r\n    let consecutive = 0\r\n    let positive = 0\r\n    let lastvalue = -1\r\n    while (pin.length < 4) {\r\n        let value = random()\r\n        if (pin[pin.length - 1] !== value) {\r\n            if (Math.abs(value - lastvalue) === 1 && positive !== (value - lastvalue)){\r\n                positive = value - lastvalue\r\n                consecutive = 0\r\n            }\r\n            consecutive = (Math.abs(value - lastvalue) === 1) ? consecutive+1 : 0\r\n            if (consecutive < 2) {\r\n                pin.push(value)\r\n                lastvalue = value\r\n            }\r\n        }\r\n    }\r\n    // add 0 if the number has a zero in the front\r\n    return (pin[3]===0? \"0\": \"\") +(pin[0]+pin[1]*10+pin[2]*100+pin[3]*1000).toString()\r\n}\r\n\r\n// Generate random number 0-9\r\nfunction random(): number {\r\n    return Math.floor(Math.random() * 10)\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap'\r\nimport { Context } from './Context'\r\nimport generate5unique from './Module'\r\n\r\n\r\nconst Generate = () => {\r\n    const [pins, setPins] = useState<string[]>(Array<string>(5))\r\n    const { data, setData } = useContext(Context)\r\n\r\n    const getPinHandler = () => {\r\n        let Pin = generate5unique()\r\n        // Adds 6th element in array to be used as Name\r\n        Pin.push(\"\")\r\n        setPins(Pin)\r\n    }\r\n\r\n    // Check if pin exist and if pin already exists\r\n    const savePinHandler = () => {\r\n        if (pins.length === 5) {\r\n            alert(\"Cannot save empty\")\r\n        } else if (data.includes(pins)) {\r\n            alert(\"Already exist\")\r\n        } else {\r\n            data.push(pins)\r\n            setData(data)\r\n        }\r\n    }\r\n    \r\n    // Loop to Draw Fields\r\n    const drawField = () => {\r\n        let fields = []\r\n        for (let i = 0; i < 5; i++) {\r\n            fields.push(<Col key={i}>\r\n                <Form.Control value={pins[i]} />\r\n            </Col>)\r\n        }\r\n        return fields\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {drawField()}\r\n            </Row>\r\n            <Row style={{ paddingTop: 10 }}>\r\n                <Col>\r\n                    <Button onClick={getPinHandler} style={{ width: 200 }} variant=\"outline-primary\" type=\"submit\">Generate</Button>\r\n                </Col>\r\n                <Col >\r\n                    <Button onClick={savePinHandler} style={{ width: 200 }} className=\"float-right\" variant=\"primary\" type=\"submit\">Save</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Generate","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap'\r\nimport { Context } from './Context'\r\n\r\nconst Saved = () => {\r\n    // Error message when there is no PIN in saved data\r\n    const { data } = useContext(Context)\r\n    return (\r\n        <Container>\r\n            {data.length !== 0 ? data.map((pins, key) => { return <Field Key={key} Pins={pins} /> }) : <p>0 Saved PINS</p>}\r\n        </Container>\r\n    )\r\n}\r\n\r\ninterface FieldProps {\r\n    Key: number,\r\n    Pins: string[],\r\n}\r\n\r\nconst Field = (Props: FieldProps) => {\r\n    const { data, setData } = useContext(Context)\r\n    const [name, setName] = useState(Props.Pins[5])\r\n\r\n    // Ensure name is up to date when Props change\r\n    useEffect(()=>{\r\n        setName(Props.Pins[5])\r\n    },[Props])\r\n    \r\n    // Delete PIN from data\r\n    const deleteHandler = () => {\r\n        let dataclone = Object.assign([], data)\r\n        dataclone.splice(Props.Key, 1)\r\n        setData(dataclone)\r\n    }\r\n\r\n    // Change name of the PIN\r\n    const onChangeNameHandler = (key: number, value: string) => {\r\n        let pins: string[] = Object.assign([], data[key])\r\n        setName(value)\r\n        pins[5] = value\r\n        data[key] = pins\r\n        setData(data)\r\n    }\r\n\r\n    // Loop to draw fields\r\n    const drawField = () => {\r\n        let fields = []\r\n        for (let i = 0; i < 5; i++) {\r\n            fields.push(<Col key={i}>\r\n                <Form.Control value={Props.Pins[i]} />\r\n            </Col>)\r\n        }\r\n        return fields\r\n    }\r\n\r\n    return (\r\n        <Row key={Props.Key} style={{ paddingBottom: 10 }}>\r\n            <Col>\r\n                <Form.Control placeholder=\"name\" value={name} onChange={(e: any) => onChangeNameHandler(Props.Key, e.target.value)} />\r\n            </Col>\r\n            {drawField()}\r\n            <Col>\r\n                <Button variant=\"danger\" onClick={deleteHandler}>Delete</Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Saved","import React, { useContext } from 'react';\nimport Navbar from './Navbar'\nimport Generate from './Generate'\nimport { Context } from './Context';\nimport Saved from './Saved';\n\nconst App = () => {\n  // React Hooks to navigate to pages:\n  //    Generate\n  //    Saved\n  \n  const {page} = useContext(Context)\n  return (\n    <>\n      <Navbar />\n      {page === \"generate\" ? <Generate />: <Saved/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { Provider } from './Context';\n\n// Provider for React Context\nReactDOM.render(\n    <Provider>\n        <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}